#!/usr/bin/env sh
":"; exec emacs --quick --script "$0" -- "$@" # -*- mode: emacs-lisp; lexical-binding: t; -*-

;; [[file:~/Projects/dotfiles/config-tangle.org][No heading:2]]
(defvar config-root (replace-regexp-in-string "bin/[^/]+$" "" load-file-name))
(add-to-list 'load-path (concat config-root "tools/emacs/packages/"))

(require 'ob-tangle)
(require 'ob-extended-tangle)
(require 'ob-text-var-expansion)
(require 'ob-load-namespaced-libraries)
(require 'ob-var-table)
(require 'notifications)
;; No heading:2 ends here

;; [[file:~/Projects/dotfiles/config-tangle.org][No heading:3]]
(setq org-babel-default-header-args `((:session         . "none")
                                      (:noweb           . "yes")
                                      (:root-dir        . ,config-root)
                                      (:mkdirp          . "yes")
                                      (:tangle-relative . dir)
                                      (:tangle          . "no")
                                      (:comments        . "yes"))
      org-confirm-babel-evaluate nil)
;; No heading:3 ends here

;; [[file:~/Projects/dotfiles/config-tangle.org][No heading:4]]
(add-hook 'after-save-hook
  'executable-make-buffer-file-executable-if-script-p)
;; No heading:4 ends here

;; [[file:~/Projects/dotfiles/config-tangle.org][No heading:5]]
(defun config-file-filter (file)
  (and
   (not (string-match (rx "mail.org" line-end) file))
   (string-match
    (rx line-start
        (eval (file-name-as-directory config-root))
        (or "literate/"
            "tools/"
            (and (+ (not "/")) ".org")))
    file)))

(defun config-files ()
  (seq-filter
   #'config-file-filter
   (directory-files-recursively config-root "\\.org$")))

(defun config-tangle ()
  (let ((files (config-files)))
    (message "Tangling files: %s" files)
    (with-ob-global-lib
     (ob-make-lib-from-files files t (lambda (file)
                                  (setq file (string-remove-prefix (file-name-as-directory config-root) file))
                                  (string-remove-suffix ".org" file)))
     (ob-tangle-files files))
    (notifications-notify :title "Config tangled"
                          :timeout 1500)))

(config-tangle)

(kill-emacs 0)
;; No heading:5 ends here
