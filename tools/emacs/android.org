#+title: Android
#+PROPERTY: header-args :tangle-relative 'dir :dir ${HOME}/.local/emacs/site-lisp
#+PROPERTY: header-args:elisp :tangle config-android.el

#+NAME: paths
| termux-bin  | /data/data/com.termux/files/usr/bin |
| termux-home | /data/data/com.termux/files/home    |


* Manual setup
Most of these steps are in termux. Unless otherwise specified.
** Dependencies
#+begin_src bash
pkg install \
    ripgrep \
    fzf \
    fd \
    git \
    python \
    neovim \
    emacs \
    which
#+end_src
** dotfiles
Clone and tangle my config
#+begin_src bash
mkdir -p ~/Repositories/theia-jane
cd ~/Repositories/theia-jane
git clone https://github.com/theia-jane/dotfiles dotfiles
cd dotfiles
./bin/config-tangle
termux-fix-shebang ~/bin/* $dot/bin/*
#+end_src

After the dotfiles have been synced reopen a new terminal (or load =~/.environment=)

** Termux
In termux after both apps are installed create a symlink from the emacs app data
dir to =~/.local/emacs= in termux. This enables the autoloading of the android config through =site-start.el= ([[file:general.org::*Site start][see]])
as the =site-lisp= directory in the emacs app data dir will now be the directory tangle to =~/.local/emacs/site-lisp=

For example in termux run:
#+begin_src bash
rm -rf ~/.local/emacs
ln -s /data/data/org.gnu.emacs/files ~/.local/emacs
emacs -Q --batch --eval "(require 'install-global-packages)"
#+end_src

Since we just wiped out our config we'll want to re-tangle our config
#+begin_src bash
config-tangle
#+end_src

Once everything has been moved we should finish up by fixing all the shebang's of the scripts we import so they can work in emacs too.
#+begin_src bash
termux-fix-shebang ~/bin/* $dot/bin/*
#+end_src

** doom
#+begin_src bash
rm -rf ~/.emacs.d
git clone --depth=1 https://github.com/doomemacs/doomemacs ~/.local/emacs/configs/doomemacs
ln -s ~/.local/emacs/configs/doomemacs ~/.emacs.d
#+end_src

Then doom sync as usual.
#+begin_src bash
doom sync
#+end_src

* Config
This package is made to be included very early in emacs' life cycle (site-start.el is the target)
#+begin_src elisp
(provide 'config-android)
#+end_src

** Termux Integration
#+NAME: termux-integration
#+begin_src elisp
(defvar android-termux-home "<<lib/get(table=paths() , field="termux-home"")>>")
(setenv "HOME" android-termux-home)

(defvar android-termux-bin "<<lib/get(table=paths() , field="termux-bin"")>>")
(setenv "PATH" (format "%s:%s" android-termux-bin (getenv "PATH")))
(push android-termux-bin exec-path)

(defvar android-termux-shell (concat android-termux-bin "/bash"))
(setenv "SHELL" android-termux-shell)
(setq shell-file-name android-termux-shell)
#+end_src

** Keyboard
#+begin_src elisp
(setq touch-screen-display-keyboard t)
#+end_src
** Env vars
Since my normal environment variables aren't set by the OS through my usual means (bash) I'm going to go ahead and grab them and set them. We do this by using a [[file:~/Repositories/theia-jane/dotfiles/tools/shell.org::*eject environment][script I created]] that checks for differences
#+begin_src elisp
(let* ((env-lines (split-string (shell-command-to-string "bash ~/bin/eject-env ~/.environment") "\n" t))
       (env-alist (mapcar
                   (lambda (x)
                     (when-let ((pos (string-match "=" x)))
                       (cons
                        (substring x 0 pos)
                        (substring x (1+ pos)))))
                   env-lines)))
  (dolist (env-set env-alist)
    (setenv (car env-set) (cdr env-set))))
#+end_src
** Load path
Normally my global packages are pulled in via =EMACSLOADPATH=. We'll have to that manually, but we have environment variable set now , so we just have to grab it.
#+begin_src elisp
(when-let* ((load-path-env (getenv "EMACSLOADPATH"))
            (path-additions (seq-filter
                             (lambda (x) (not (string-empty-p x)))
                             (split-string load-path-env ":"))))
  (dolist (p path-additions)
    (add-to-list 'load-path p)))
#+end_src
